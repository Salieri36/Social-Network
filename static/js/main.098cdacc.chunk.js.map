{"version":3,"sources":["API/API.js","components/ProfilePage/ProfilePage.module.css","components/ProfilePage/ProfilePosts/ProfilePosts.module.css","components/ProfilePage/ProfileNewPost/ProfileNewPost.module.css","components/ProfilePage/ProfileMain/ProfileStatus.module.css","components/DialogsPage/DialogsList/DialogsList.module.css","components/DialogsPage/DialogsMessages/DialogsMessages.module.css","components/DialogsPage/DialogsNewMessage/DialogsNewMessage.module.css","components/Login/Login.module.css","components/Login/LoginForm.module.css","redux/reducers/profile-reducer.js","redux/reducers/users-reducer.js","components/Sidebar/Sidebar.jsx","components/ProfilePage/ProfilePosts/ProfilePost/ProfilePost.jsx","components/ProfilePage/ProfilePosts/ProfilePosts.jsx","redux/reducers/state-selectors.js","components/ProfilePage/ProfilePosts/ProfilePostsContainer.jsx","components/validator.js","components/Login/FormControl.jsx","components/ProfilePage/ProfileNewPost/ProfileNewPostForm.jsx","components/ProfilePage/ProfileNewPost/ProfileNewPost.jsx","components/ProfilePage/ProfileNewPost/ProfileNewPostContainer.jsx","components/ProfilePage/ProfileMain/ProfileStatus.jsx","components/ProfilePage/ProfileMain/ProfileDataForm.jsx","components/ProfilePage/ProfileMain/ProfileMain.jsx","redux/reducers/auth-reducer.js","HOC/authRedirect.js","components/ProfilePage/ProfileMain/ProfileMainContainer.jsx","components/ProfilePage/ProfilePage.jsx","components/DialogsPage/DialogsList/DialogsList.jsx","components/DialogsPage/DialogsMessages/DialogsMessage/DialogsMessage.jsx","components/DialogsPage/DialogsMessages/DialogsMessages.jsx","components/DialogsPage/DialogsMessages/DialogsMessagesContainer.jsx","components/DialogsPage/DialogsNewMessage/DialogsNewMessageForm.jsx","components/DialogsPage/DialogsNewMessage/DialogsNewMessage.jsx","components/DialogsPage/DialogsNewMessage/DialogsNewMessageContainer.jsx","components/DialogsPage/DialogsPage.jsx","components/UsersPage/UsersUser/UsersUser.jsx","components/UsersPage/UsersPage.jsx","components/UsersPage/UsersPageContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/Login.jsx","App.js","serviceWorker.js","redux/store.js","index.js","components/Login/FormControl.module.css","assets/img/my-avatar.png","components/ProfilePage/ProfilePosts/ProfilePost/ProfilePost.module.css","redux/reducers/dialogs-reducer.js","components/ProfilePage/ProfileMain/ProfileMain.module.css","components/UsersPage/UsersUser/UsersUser.module.css","components/DialogsPage/DialogsPage.module.css","components/Header/Header.module.css","assets/img/Lineage_OS_Logo.png","components/Sidebar/Sidebar.module.css","components/ProfilePage/ProfileNewPost/ProfileNewPostForm.module.css","components/DialogsPage/DialogsMessages/DialogsMessage/DialogsMessage.module.css","components/DialogsPage/DialogsNewMessage/DialogsNewMessageForm.module.css","components/UsersPage/UsersPage.module.css"],"names":["instance","axios","withCredentials","headers","baseURL","userAPI","getUsers","currentPage","get","then","response","data","getUserProfile","userId","auth","following","post","unfollowing","delete","getUserStatus","updateStatus","statusText","put","status","login","email","password","rememberMe","console","log","logout","putPhoto","photo","formData","FormData","append","saveProfile","profile","module","exports","initialState","posts","id","name","postsText","likesCount","usersInfoFull","userInfo","userAvatar","userStatus","userName","changedUser","photos","postsId","updateMessage","newText","type","addPost","setUserProfile","info","setUserId","setNewPost","newPostText","savePhotoAC","getAllUsersInfo","getUserProfileThunkCreator","dispatch","large","aboutMe","fullName","saveProfileTC","getState","userData","resultCode","getAllUsersInfoTK","savePhotoThunkCreator","file","profileReducer","state","action","newPostsText","newUserInfo","newPost","users","totalCount","usersOnPage","totalPagesCount","followInProgres","usersStatus","follow","unfollow","setUsers","setTotalCount","setCurrentPage","toggleFollowingProgres","progres","setUsersStatus","updateProfileStatus","updateStatusThankCreator","setUserStatusThunkCreator","getUserThunkCreator","items","updateUserThunkCreator","followingThunkCreator","unfollowingThunkCreator","userReducer","map","user","followed","Sidebar","className","style","sidebar","active","to","ProfilePost","props","postBlock","author","src","avatar","alt","likes","ProfilePosts","postsElements","key","main","getPostsSelector","profilePage","ProfilePostsContainer","connect","requiredField","value","maxLengthCreator","maxLength","length","FormControl","input","meta","errorText","error","hasError","touched","FormControl2","FormControl3","maxLength20","ProfileNewPostFormWrapper","reduxForm","form","onSubmit","handleSubmit","Field","component","placeholder","validate","btn","ProfileNewPost","ProfileNewPostContainer","ProfileStatusClass","editMode","text","activeEditMode","setState","deactiveEditMode","inputElement","current","this","match","params","inputBlock","ref","autoFocus","onBlur","onDoubleClick","React","Component","createRef","ProfileStatusContainer","compose","usersPage","withRouter","ProfileDataReduxForm","ProfileData","onClick","goToEditMode","lookingForAJob","lookingForAJobDescription","ProfileMain","useState","setEditMode","onChange","e","target","files","savePhoto","infoBlock","initialValues","statusBlock","ProfileStatus","isAuth","init","setUserData","logoutThunkCreator","authThunkCreator","authReducer","authRedirect","ProfileMainContainer","ProfileMainWrapper","ProfilePage","DialogsList","DialogsMessage","messageBlock","messageText","message","DialogsMessages","messageElement","messages","messagesText","DialogsMessagesContainer","dialogsPage","maxLength10","DialogsNewMessageFormContainer","DialogsNewMessage","sendNewMessage","newMessageText","DialogsNewMessageContainer","newMessagesText","addMessage","DialogsPage","dialog","list","UsersUser","path","usersBlock","small","UsersPage","userElement","pages","Math","ceil","i","push","pagesElement","page","selectedPage","changePage","UsersPageAPI","UsersPageContainer","Header","header","logo","loginBlock","HeaderContainer","HeaderWrapper","LoginFormContainer","LoginContainer","loginThunkCreator","setTimeout","App","initTK","Boolean","window","location","hostname","require","combineReducers","createStore","applyMiddleware","store","default","formReducer","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","messageId","dialogsReducer","newMessage"],"mappings":"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","file":"static/js/main.098cdacc.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": \"3f3df44b-12e8-476c-b3e6-089c3a820b9a\",\r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\"\r\n});\r\n\r\nexport const userAPI = {\r\n    getUsers(currentPage) {\r\n        return instance.get(`users?page=${currentPage}`)\r\n            .then(response => {\r\n                return response.data;                                \r\n            });\r\n    },\r\n    getUserProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => {                \r\n                return response.data;\r\n            })\r\n    },\r\n    auth() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => {\r\n                return response.data;\r\n            })\r\n    },\r\n    following(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n        })\r\n    },\r\n    unfollowing(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n        })\r\n    },\r\n    getUserStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n                return response.data;\r\n        })\r\n    },\r\n    updateStatus(statusText) {\r\n        return instance.put(`profile/status`, {status: statusText})\r\n            .then(response => {\r\n                return response.data;\r\n        })\r\n    },\r\n    login(email, password, rememberMe) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                return response.data;\r\n        })\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n            .then(response => {\r\n                return response.data;\r\n        })\r\n    },\r\n    putPhoto(photo) {\r\n        const formData = new FormData();\r\n        formData.append('image', photo)\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n            .then(response => {\r\n                return response.data;\r\n        })\r\n    },      \r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"ProfilePage_profile__2I8cC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfilePosts_main__2jUhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfileNewPost_main__1dT10\",\"btn\":\"ProfileNewPost_btn__34MKG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"ProfileStatus_inputBlock__1m5ah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DialogsList_main__3dCEi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DialogsMessages_main__QFlUj\",\"messageBlock\":\"DialogsMessages_messageBlock__HwpHx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DialogsNewMessage_main__acKTR\",\"btn\":\"DialogsNewMessage_btn__mxOnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Login_header__2psyF\",\"logo\":\"Login_logo__2y22X\",\"loginBlock\":\"Login_loginBlock__2KS7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"LoginForm_main__1SGYM\"};","import { userAPI } from \"../../API/API\";\r\n\r\nconst UPDATE_MESSAGE = 'UPDATE_MESSAGE';\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_USER_ID = 'SET_USER_ID';\r\nconst SET_NEW_POST = 'SET_NEW_POST';\r\nconst SAVE_PHOTO = 'SAVE_PHOTO';\r\nconst GET_ALL_USER_INFO = 'GET_ALL_USER_INFO';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, name: 'Roman B.', postsText: 'text<br></br>text<br></br>text<br></br>text<br></br>text<br></br>', likesCount: 9},\r\n        {id: 2, name: 'Roman B.', postsText: 'test test', likesCount: 2},\r\n        {id: 3, name: 'Roman B.', postsText: 'new message!!!!', likesCount: 15}\r\n    ],\r\n    usersInfoFull:{\r\n\r\n    },    \r\n    userInfo: {\r\n        userAvatar: null,\r\n        userStatus: null,\r\n        userId: null,\r\n        userName: null\r\n    },\r\n    changedUser: null,\r\n    photos: null\r\n}\r\nlet postsId = 4;\r\nconst profileReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case UPDATE_MESSAGE:            \r\n            return {\r\n                ...state,               \r\n                newPostsText: action.newText\r\n            }           \r\n       \r\n        case SET_USER_PROFILE:\r\n            let newUserInfo = {\r\n                userAvatar: action.photo, \r\n                userStatus: action.info, \r\n                userId: action.id, \r\n                userName: action.name\r\n            };\r\n            return {\r\n                ...state,\r\n                userInfo: newUserInfo\r\n            }\r\n        case SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                changedUser: action.userId\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                photos: action.photos\r\n            }\r\n        case GET_ALL_USER_INFO:\r\n            return {\r\n                ...state,\r\n                usersInfoFull: action.info\r\n            }\r\n        case SET_NEW_POST:\r\n            let newPost = {                \r\n                id: postsId,\r\n                name: 'Roman B.',\r\n                postsText: action.newPostText,\r\n                likesCount: 0\r\n            }            \r\n            postsId++;\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]                \r\n            }           \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateMessage = (newText) => ({ type: UPDATE_MESSAGE, newText });\r\nexport const addPost = () => ({ type: ADD_POST });\r\nexport const setUserProfile = (photo, info, id, name) => ({type: SET_USER_PROFILE, photo, info, id, name});\r\nexport const setUserId = (userId) => ({type: SET_USER_ID, userId});\r\nexport const setNewPost = (newPostText) => ({type: SET_NEW_POST, newPostText});\r\nexport const savePhotoAC = (photos) => ({type: SAVE_PHOTO, photos});\r\nexport const getAllUsersInfo = (info) => ({type: GET_ALL_USER_INFO, info});\r\n\r\nexport const getUserProfileThunkCreator = (userId) => {\r\n    return (dispatch) => {\r\n        userAPI.getUserProfile(userId).then(data => {                        \r\n            dispatch(setUserProfile(data.photos.large, data.aboutMe, data.userId, data.fullName));            \r\n        });\r\n    }\r\n}\r\n\r\nexport const saveProfileTC = (profile) => {\r\n    return (dispatch, getState) => {\r\n        const userId = getState().auth.userData.id;\r\n        userAPI.saveProfile(profile).then(data => {                        \r\n            if (data.resultCode === 0) {\r\n                dispatch(getAllUsersInfoTK(userId));\r\n            }            \r\n        });\r\n    }\r\n}\r\n\r\nexport const getAllUsersInfoTK = (userId) => {    \r\n    return (dispatch) => {\r\n        userAPI.getUserProfile(userId).then(data => {                        \r\n            dispatch(getAllUsersInfo(data));                        \r\n        });\r\n    }\r\n}\r\n\r\nexport const savePhotoThunkCreator = (file) => {\r\n    return (dispatch) => {\r\n        userAPI.putPhoto(file).then(data => {            \r\n            dispatch(savePhotoAC(data.data.photos));            \r\n        });\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import { userAPI } from \"../../API/API\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_TOTAL_COUNT = 'SET_TOTAL_COUNT';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOGGLE_FOLLOW_IN_PROGRES = 'TOGGLE_FOLLOW_IN_PROGRES';\r\nconst SET_USERS_STATUS ='SET_USERS_STATUS';\r\nconst UPDATE_STATUS = 'UPDATE_STATUS';\r\n\r\nlet initialState = {\r\n    users: [\r\n        \r\n    ],\r\n    totalCount: 0,\r\n    usersOnPage: 10,\r\n    currentPage: 1,\r\n    totalPagesCount: 1,\r\n    followInProgres: false,\r\n    usersStatus: 'my status'\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( (user) => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: true}\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map( (user) => {\r\n                    if (user.id === action.userId) {\r\n                        return {...user, followed: false}\r\n                    }\r\n                    return user;\r\n                }),\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case TOGGLE_FOLLOW_IN_PROGRES:\r\n            return {\r\n                ...state,\r\n                followInProgres: action.progres\r\n            }\r\n        case SET_USERS_STATUS:\r\n            return {\r\n                ...state,\r\n                usersStatus: action.status\r\n            }\r\n        case UPDATE_STATUS:\r\n            return {\r\n                ...state,\r\n                usersStatus: action.statusText\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const follow = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollow = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setTotalCount = (totalCount) => ({type: SET_TOTAL_COUNT, totalCount});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const toggleFollowingProgres = (progres) => ({type: TOGGLE_FOLLOW_IN_PROGRES, progres});\r\nexport const setUsersStatus = (status) => ({type: SET_USERS_STATUS, status});\r\nexport const updateProfileStatus = (statusText) => ({type: UPDATE_STATUS, statusText});\r\n\r\n\r\nexport const updateStatusThankCreator = (statusText) => {\r\n    return (dispatch) => {\r\n        userAPI.updateStatus(statusText).then(data => {\r\n            dispatch(updateProfileStatus(statusText));\r\n        });\r\n    }\r\n}\r\nexport const setUserStatusThunkCreator = (userId) => {\r\n    return (dispatch) => {        \r\n        userAPI.getUserStatus(userId).then(data => {                       \r\n            dispatch(setUsersStatus(data));                       \r\n        });\r\n    }\r\n};\r\nexport const getUserThunkCreator = (currentPage) => {\r\n    return (dispatch) => {\r\n        userAPI.getUsers(currentPage).then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalCount(data.totalCount));\r\n        });\r\n    }\r\n};\r\nexport const updateUserThunkCreator = (currentPage) => {\r\n    return (dispatch) => {\r\n        userAPI.getUsers(currentPage).then(data => {\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setCurrentPage(currentPage));\r\n        });\r\n    }\r\n};\r\nexport const followingThunkCreator = (userId) => {    \r\n    return (dispatch) => {  \r\n        dispatch(toggleFollowingProgres(true));      \r\n        userAPI.following(userId).then(data => {            \r\n            if (data.resultCode === 0) {\r\n                dispatch(follow(userId));\r\n            }                        \r\n        });\r\n        dispatch(toggleFollowingProgres(false));\r\n    }\r\n};\r\nexport const unfollowingThunkCreator = (userId) => {    \r\n    return (dispatch) => {  \r\n        dispatch(toggleFollowingProgres(true));      \r\n        userAPI.unfollowing(userId).then(data => {            \r\n            if (data.resultCode === 0) {\r\n                dispatch(unfollow(userId));\r\n            }                        \r\n        });\r\n        dispatch(toggleFollowingProgres(false));\r\n    }\r\n};\r\nexport default userReducer;","import React from 'react';\r\nimport style from './Sidebar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className = {style.sidebar}>\r\n            <ul>\r\n                <li className = {style.active}><NavLink to='/profile'>Profile</NavLink></li>\r\n                <li><NavLink to='/dialogs'>Dialogs</NavLink></li>\r\n                <li><NavLink to='/users'>Users</NavLink></li>\r\n                <li><NavLink to='/music'>Music</NavLink></li>\r\n                <li><NavLink to='/setting'>Setting</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport style from './ProfilePost.module.css';\r\nimport avatar from '../../../../assets/img/my-avatar.png';\r\n\r\nconst ProfilePost = (props) => {    \r\n    return (\r\n        <div className = {style.postBlock}>\r\n            <div className = {style.post}>\r\n                <div className = {style.author}>\r\n                    <img src = {avatar} alt = 'avatar' />\r\n                    <p>Roman B.</p>\r\n                </div>\r\n                <div className = {style.postsText}> {props.postsText} </div>   \r\n            </div>\r\n            <div className = {style.likes}>\r\n                likes: <span>{props.likesCount}</span>    \r\n            </div>             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePost;","import React from 'react';\r\nimport style from './ProfilePosts.module.css';\r\nimport ProfilePost from './ProfilePost/ProfilePost';\r\n\r\nconst ProfilePosts = (props) => {\r\n\r\nlet postsElements = props.posts.map( (post) => <ProfilePost postsText = {post.postsText} likesCount = {post.likesCount} key = {post.id}/>); \r\n    \r\n    return (\r\n        <div className = {style.main}>            \r\n            {postsElements}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePosts;","export const getPostsSelector = (state) => {\r\n    return state.profilePage.posts;\r\n}","import {connect} from 'react-redux';\r\nimport ProfilePosts from './ProfilePosts';\r\nimport { getPostsSelector } from '../../../redux/reducers/state-selectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: getPostsSelector(state)\r\n    }\r\n}\r\n\r\nconst ProfilePostsContainer = connect(mapStateToProps)(ProfilePosts);\r\n\r\nexport default ProfilePostsContainer;","export const requiredField = (value) => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return \"Field is require\";    \r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport style from './FormControl.module.css';\r\n\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n    const errorText = meta.error;\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className = {style.main} >\r\n            <div>\r\n                <input {...input} {...props} className = {hasError && style.error}/>\r\n            </div>\r\n            {hasError && <span>{errorText}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default FormControl;\r\n\r\nexport const FormControl2 = ({input, meta, ...props}) => {\r\n    const errorText = meta.error;\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className = {style.main} >\r\n            <div>\r\n                <input {...input} {...props} className = {hasError && style.error}/>\r\n            </div>\r\n            {hasError && <span>{errorText}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FormControl3 = ({input, meta, ...props}) => {\r\n    const errorText = meta.error;\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className = {style.main} >\r\n            <div>\r\n                <textarea {...input} {...props} className = {hasError && style.error}/>\r\n            </div>\r\n            {hasError && <span>{errorText}</span>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport style from './ProfileNewPostForm.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, requiredField } from '../../validator';\r\nimport { FormControl3 } from '../../Login/FormControl';\r\n\r\nlet maxLength20 = maxLengthCreator(20);\r\nconst ProfileNewPostForm = (props) => {                \r\n    return (\r\n        <form className = {style.main} onSubmit = {props.handleSubmit}>\r\n            <Field component = {FormControl3} name = {\"newPostText\"} placeholder = {\"Write your posts text\"} validate = {[requiredField, maxLength20]}></Field>\r\n            <div className = {style.btn}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileNewPostFormWrapper = reduxForm({form: 'newPost'})(ProfileNewPostForm);\r\n\r\nexport default ProfileNewPostFormWrapper;","import React from 'react';\r\nimport style from './ProfileNewPost.module.css';\r\nimport ProfileNewPostFormWrapper from './ProfileNewPostForm';\r\n\r\nconst ProfileNewPost = (props) => {    \r\n    const onSubmit = (formData) => {        \r\n        props.setNewPost(formData.newPostText);\r\n    }        \r\n    return (\r\n        <div className = {style.main}>\r\n            <h2>My Posts</h2>\r\n            <ProfileNewPostFormWrapper onSubmit = {onSubmit} setNewPost = {props.setNewPost}/>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileNewPost;","import { connect } from \"react-redux\";\r\nimport ProfileNewPost from \"./ProfileNewPost\";\r\nimport {updateMessage, addPost, setNewPost} from \"../../../redux/reducers/profile-reducer\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newPostsText: state.profilePage.newPostsText\r\n    }\r\n}\r\n\r\nconst ProfileNewPostContainer = connect(mapStateToProps, {updateMessage, addPost, setNewPost})(ProfileNewPost);\r\n\r\nexport default ProfileNewPostContainer;","import React from 'react';\r\nimport style from './ProfileStatus.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { setUserStatusThunkCreator, updateStatusThankCreator } from '../../../redux/reducers/users-reducer';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass ProfileStatusClass extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {            \r\n            userId = this.props.userData.id;\r\n        }\r\n        this.props.setUserStatusThunkCreator(userId);        \r\n    }\r\n    componentDidUpdate() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {            \r\n            userId = this.props.userData.id;\r\n        }\r\n        this.props.setUserStatusThunkCreator(userId);        \r\n    }\r\n    state = {\r\n        editMode: false,\r\n        text: \"\"\r\n    }\r\n    activeEditMode = () => {        \r\n        if (this.props.userId === 7926) {\r\n            this.setState({\r\n                editMode: true\r\n            })\r\n        }      \r\n    }\r\n    deactiveEditMode = () => {        \r\n        let statusText = inputElement.current.value;         \r\n        this.props.updateStatusThankCreator(statusText);                \r\n        this.setState({\r\n            editMode: false,\r\n            text: this.props.status\r\n        })        \r\n    }    \r\n    render() {        \r\n        return (\r\n            <div>            \r\n                {this.state.editMode \r\n                    ? \r\n                        <div className = {style.inputBlock}>\r\n                            <input ref = {inputElement} autoFocus = {true} onBlur = {this.deactiveEditMode}></input>\r\n                        </div>\r\n                    :\r\n                        <div>\r\n                            <span onDoubleClick = {this.activeEditMode}>{this.props.status || \"status\"}</span>\r\n                        </div>\r\n                }            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet inputElement = React.createRef();\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.usersPage.usersStatus,\r\n        userData: state.auth.userData,\r\n        userId: state.profilePage.userInfo.userId\r\n    }    \r\n}\r\n\r\nconst ProfileStatusContainer = compose(\r\n    connect(mapStateToProps, {setUserStatusThunkCreator, updateStatusThankCreator}),\r\n    withRouter\r\n)(ProfileStatusClass);\r\n\r\nexport default ProfileStatusContainer;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nconst ProfileDataForm = (props) => {\r\n    return ( <form onSubmit={props.handleSubmit}>\r\n        <div><button>Save</button></div>\r\n        <p><span>Full Name: </span></p><Field placeholder={'Name'} name={'fullName'} component={\"input\"} />\r\n        <p><span>About Me: </span></p><Field placeholder={'About Me'} name={'aboutMe'} component={\"input\"} />    \r\n        <p><span>Looking for a job: </span></p><Field name={'lookingForAJob'} component={\"input\"} type={'checkbox'} />\r\n        <p><span>My professional skills: </span></p><Field placeholder={'My scills'} name={'lookingForAJobDescription'} component={\"textarea\"} />        \r\n    </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({form: 'infoForm'})(ProfileDataForm);\r\nexport default ProfileDataReduxForm;","import React from 'react';\r\nimport style from './ProfileMain.module.css';\r\nimport avatar from '../../../assets/img/my-avatar.png';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport { useState } from 'react';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport ProfileDataReduxForm from './ProfileDataForm';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileMain = (props) => { \r\n    \r\n    const [editMode, setEditMode] = useState(false);    \r\n    \r\n    const selectedMainPhoto = (e) => {        \r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    const onSubmit = (formData) => {\r\n        props.saveProfile(formData);\r\n        setEditMode(false);\r\n    }       \r\n    return (\r\n        <div className = {style.main}>\r\n            <div className  = {style.avatar}>\r\n                {!props.userInfo.userAvatar ? <img src = {avatar} alt='avatar' /> : <img src = {props.userInfo.userAvatar} alt='avatar' />}\r\n                {!props.match.params.userId ? <input type = {'file'} onChange = {selectedMainPhoto} /> : null}                \r\n            </div>\r\n            <div className = {style.infoBlock}>\r\n                <h2>{props.usersInfoFull.fullName}</h2>\r\n                { editMode ? <ProfileDataReduxForm initialValues={props.usersInfoFull} onSubmit={onSubmit} usersInfoFull = {props.usersInfoFull} userInfo = {props.userInfo} /> : <ProfileData goToEditMode={() => {setEditMode(true)}}  userData = {props.userData} usersInfoFull = {props.usersInfoFull} userInfo = {props.userInfo} />}\r\n            </div>\r\n            <div className = {style.statusBlock}>\r\n                <h2>Users ststus</h2>\r\n                <ProfileStatus />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = (props) => {    \r\n    return ( <div>\r\n        {props.userInfo.userId === 7926 && <div><button onClick = {props.goToEditMode}>Edit</button></div> }        \r\n        <p><span>About Me: </span>{props.usersInfoFull.aboutMe}</p>\r\n    <p><span>User ID: </span>{props.userInfo.userId}</p>\r\n    <p><span>Looking for a job: </span>{!props.usersInfoFull.lookingForAJob ? 'No' : 'Yes'}</p>\r\n    {props.usersInfoFull.lookingForAJob ? <p><span>My professional skills: </span>{props.usersInfoFull.lookingForAJobDescription}</p> : null}   \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ProfileMain;","import { userAPI } from \"../../API/API\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\nconst LOGOUT = 'LOGOUT';\r\nconst INIT = 'INIT';\r\n\r\nlet initialState = {\r\n    userData: {\r\n        id: null,\r\n        login: null,\r\n        email: null        \r\n    },    \r\n    isAuth: false,\r\n    init: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    \r\n    switch (action.type) {\r\n        case SET_USER_DATA:             \r\n            return {\r\n                ...state,\r\n                userData: action.userData,               \r\n                isAuth: true\r\n            }\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                userData: {...state.userData, id: null, login: null, email: null},               \r\n                isAuth: false \r\n            }\r\n        case INIT:            \r\n            return {\r\n                ...state,\r\n                init: true\r\n            }                   \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserData = (userData) => ({type: SET_USER_DATA, userData});\r\nexport const logautAC = () => ({type: LOGOUT});\r\nexport const initilized = () => ({type: INIT});\r\n\r\nexport const loginThunkCreator = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        userAPI.login(email, password, rememberMe).then( data => {\r\n            dispatch(setUserData(data.data));\r\n        });\r\n        setTimeout(() => {\r\n            userAPI.auth().then( data => {                \r\n                dispatch(setUserData(data.data));\r\n            });\r\n        }, 1000)            \r\n    }\r\n}\r\nexport const logoutThunkCreator = () => {\r\n    return (dispatch) => {\r\n        userAPI.logout().then( data => {\r\n            dispatch(logautAC());                        \r\n        });        \r\n    }\r\n}\r\nexport const authThunkCreator = () => {\r\n    return (dispatch) => {        \r\n        return userAPI.auth().then(data => {            \r\n            if (data.resultCode === 0) {                \r\n                dispatch(setUserData(data.data));\r\n            }          \r\n        });       \r\n    }\r\n};\r\n\r\nexport const initTK = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authThunkCreator());        \r\n        promise.then( () => {\r\n            dispatch(initilized());\r\n        });\r\n    }\r\n}\r\nexport default authReducer;","import { Redirect } from \"react-router-dom\";\r\nimport React from 'react';\r\n\r\n\r\nexport const authRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) {\r\n                return <Redirect to='/login' />\r\n            }\r\n            return <Component {...this.props} />\r\n        }        \r\n    }\r\n    return RedirectComponent;\r\n}","import React from 'react';\r\nimport ProfileMain from './ProfileMain';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport {getUserProfileThunkCreator, savePhotoThunkCreator, getAllUsersInfoTK, saveProfileTC} from \"../../../redux/reducers/profile-reducer\";\r\nimport {authThunkCreator} from \"../../../redux/reducers/auth-reducer\";\r\nimport { authRedirect } from '../../../HOC/authRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass ProfileMainContainer extends React.Component {    \r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {            \r\n            userId = this.props.userData.id;\r\n        }        \r\n        this.props.getUserProfileThunkCreator(userId);\r\n        this.props.getAllUsersInfoTK(userId);                                \r\n    }\r\n    componentDidUpdate() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.userData.id;            \r\n        }               \r\n        this.props.getUserProfileThunkCreator(userId);\r\n    }    \r\n    render() {        \r\n        return (                                   \r\n            <ProfileMain {...this.props} getAllUsersInfo={this.props.getAllUsersInfoTK} saveProfile={this.props.saveProfileTC} userData = {this.props.userData} userInfo = {this.props.userInfo} savePhoto = {this.props.savePhotoThunkCreator} usersInfoFull = {this.props.usersInfoFull} />\r\n        )               \r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n        userInfo: state.profilePage.userInfo,\r\n        isAuth: state.auth.isAuth,\r\n        userData: state.auth.userData,\r\n        usersInfoFull: state.profilePage.usersInfoFull\r\n    }\r\n}\r\n\r\nconst ProfileMainWrapper = compose(\r\n    connect(mapStateToProps, {getUserProfileThunkCreator, authThunkCreator, savePhotoThunkCreator, getAllUsersInfoTK, saveProfileTC}),\r\n    withRouter,\r\n    authRedirect\r\n)(ProfileMainContainer);\r\n\r\nexport default ProfileMainWrapper;","import React from 'react';\r\nimport style from './ProfilePage.module.css';\r\nimport ProfilePostsContainer from './ProfilePosts/ProfilePostsContainer';\r\nimport ProfileNewPostContainer from './ProfileNewPost/ProfileNewPostContainer';\r\nimport  ProfileMainWrapper  from './ProfileMain/ProfileMainContainer';\r\n\r\nconst ProfilePage = (props) => {    \r\n    return (\r\n        <div className = {style.profile}>            \r\n            <ProfileMainWrapper />\r\n            <ProfileNewPostContainer />\r\n            <ProfilePostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfilePage;","import React from 'react';\r\nimport style from './DialogsList.module.css';\r\n\r\n\r\nconst DialogsList = () => {\r\n    return (\r\n        <div className = {style.main}>\r\n            <ul>\r\n                <li>Ivan</li>\r\n                <li>Sergey</li>\r\n                <li>Anna</li>\r\n                <li>Sasha</li>\r\n                <li>Alex</li>\r\n            </ul>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsList;","import React from 'react';\r\nimport style from './DialogsMessage.module.css';\r\n\r\nconst DialogsMessage = (props) => {\r\n\r\n    return (\r\n        <div className = {style.messageBlock}>\r\n            <div className = {style.messageText}>{props.message}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsMessage;","import React from 'react';\r\nimport style from './DialogsMessages.module.css';\r\nimport DialogsMessage from './DialogsMessage/DialogsMessage';\r\n\r\nconst DialogsMessages = (props) => {\r\n\r\n    let messageElement = props.messages.map( (message) => <DialogsMessage message = {message.messagesText}/>);\r\n\r\n    return (\r\n        <div className = {style.main}>            \r\n            {messageElement} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsMessages;","import {connect} from 'react-redux';\r\nimport DialogsMessages from './DialogsMessages';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        messages: state.dialogsPage.messages\r\n    }\r\n}\r\n\r\nconst DialogsMessagesContainer = connect(mapStateToProps)(DialogsMessages);\r\n\r\nexport default DialogsMessagesContainer;","import React from 'react';\r\nimport style from './DialogsNewMessageForm.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { FormControl3 } from '../../Login/FormControl';\r\nimport { maxLengthCreator, requiredField } from '../../validator';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst DialogsNewMessageForm = (props) => {\r\n    return (\r\n        <form className = {style.main} onSubmit = {props.handleSubmit}>            \r\n            <Field component = {FormControl3} name = {\"newMessageText\"} placeholder = {\"Write yor message...\"} validate = {[requiredField, maxLength10]}></Field>\r\n            <div className = {style.btn}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsNewMessageFormContainer = reduxForm({form: 'newMessage'})(DialogsNewMessageForm);\r\n\r\nexport default DialogsNewMessageFormContainer;","import React from 'react';\r\nimport style from './DialogsNewMessage.module.css';\r\nimport DialogsNewMessageFormContainer from './DialogsNewMessageForm';\r\n\r\n\r\nconst DialogsNewMessage = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendNewMessage(formData.newMessageText);\r\n    }\r\n    return (\r\n        <div className = {style.main}>            \r\n            <DialogsNewMessageFormContainer onSubmit = {onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsNewMessage;","import DialogsNewMessage from \"./DialogsNewMessage\";\r\nimport { connect } from \"react-redux\";\r\nimport {updateMessage, addMessage, sendNewMessage} from \"../../../redux/reducers/dialogs-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        newMessagesText: state.dialogsPage.newMessagesText\r\n    }\r\n}\r\n\r\nconst DialogsNewMessageContainer = connect(mapStateToProps, {updateMessage, addMessage, sendNewMessage})(DialogsNewMessage);\r\n\r\nexport default DialogsNewMessageContainer;","import React from 'react';\r\nimport style from './DialogsPage.module.css';\r\nimport DialogsList from './DialogsList/DialogsList';\r\nimport DialogsMessagesContainer from './DialogsMessages/DialogsMessagesContainer';\r\nimport DialogsNewMessageContainer from './DialogsNewMessage/DialogsNewMessageContainer';\r\n\r\n\r\nconst DialogsPage = () => {\r\n    return (\r\n        <div className = {style.dialog}>\r\n            <div className = {style.list}>\r\n                <DialogsList />\r\n            </div>\r\n            <div className = {style.messages}>\r\n                <DialogsMessagesContainer />\r\n                <DialogsNewMessageContainer />\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogsPage;","import React from 'react';\r\nimport style from './UsersUser.module.css';\r\nimport avatar from '../../../assets/img/my-avatar.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst UsersUser = (props) => {       \r\n    let follow = () => {               \r\n        let userId = props.userId;               \r\n        props.followingThunkCreator(userId);        \r\n    }\r\n    let unfollow = () => {                \r\n        let userId = props.userId;\r\n        props.unfollowingThunkCreator(userId);\r\n    }\r\n    let path = '/profile/' + props.userId;\r\n    return (\r\n        <div className = {style.users}>\r\n            <div className = {style.usersBlock}>\r\n                <div className  = {style.avatar}>\r\n                    \r\n                    <NavLink to = {path}><img src = {props.photos.small != null ? props.photos.small : avatar} alt='avatar' /><br></br></NavLink>                                      \r\n                    {props.followed ? <button onClick = {unfollow}>Unfollow</button> : <button onClick = {follow}>Follow</button>}                    \r\n                </div>\r\n                <div className = {style.infoBlock}>\r\n                    <p><span>Name: </span>{props.name}</p>\r\n                    {props.status != null ? <p><span>Status: </span>{props.status}</p> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default UsersUser;","import React from 'react';\r\nimport style from './UsersPage.module.css';\r\nimport UsersUser from './UsersUser/UsersUser';\r\nimport * as axios from 'axios';\r\nimport { userAPI } from \"../../API/API\";\r\n\r\nconst UsersPage = (props) => {\r\n    \r\n    let userElement = props.usersPage.users.map( (user) => <UsersUser unfollowingThunkCreator = {props.unfollowingThunkCreator} followingThunkCreator = {props.followingThunkCreator} followed = {user.followed} name = {user.name} photos = {user.photos} status = {user.status} userId = {user.id} usersPage = {props.usersPage} unfollow = {props.unfollow} follow = {props.followingThunkCreator} key = {user.id}/>);\r\n    let pagesCount = Math.ceil(props.usersPage.totalCount / props.usersPage.usersOnPage);\r\n    let pages = [];\r\n    for (let i = 1; i <= 23; i++) {\r\n        pages.push(i);        \r\n    }\r\n    let changePage = (page) => {                \r\n        props.updateUserThunkCreator(page);\r\n    }\r\n    let pagesElement = pages.map( (page) => {        \r\n        return <span className = {props.usersPage.currentPage === page && style.selectedPage} onClick = {() => {changePage(page)}}>{page}</span>\r\n    });        \r\n    return (\r\n        <div className = {style.users}>\r\n            {userElement}            \r\n            {pagesElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersPage;","import { connect } from \"react-redux\";\r\nimport UsersPage from \"./UsersPage\";\r\nimport {follow, unfollow, getUserThunkCreator, updateUserThunkCreator, followingThunkCreator, unfollowingThunkCreator} from '../../redux/reducers/users-reducer';\r\nimport * as axios from \"axios\";\r\nimport React from 'react';\r\nimport { userAPI } from \"../../API/API\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authRedirect } from \"../../HOC/authRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nclass UsersPageAPI extends React.Component {    \r\n    componentDidMount() {               \r\n        this.props.getUserThunkCreator(this.props.usersPage.currentPage);\r\n    }\r\n    render() {        \r\n        return <UsersPage usersPage = {this.props.usersPage} unfollowingThunkCreator = {this.props.unfollowingThunkCreator} followingThunkCreator = {this.props.followingThunkCreator} updateUserThunkCreator = {this.props.updateUserThunkCreator} follow = {this.props.follow} unfollow = {this.props.unfollow} setCurrentPage = {this.props.setCurrentPage} setUsers = {this.props.setUsers} />\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {       \r\n    return {\r\n        usersPage: state.usersPage,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst UsersPageContainer = compose(\r\n    connect(mapStateToProps, {follow, unfollow, getUserThunkCreator, updateUserThunkCreator, followingThunkCreator, unfollowingThunkCreator}),\r\n    authRedirect\r\n)(UsersPageAPI);\r\n\r\nexport default UsersPageContainer;","import React from 'react';\r\nimport style from './Header.module.css';\r\nimport logo from '../../assets/img/Lineage_OS_Logo.png';\r\nimport { Redirect, NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const logout = () => {\r\n        props.logoutThunkCreator();\r\n    }    \r\n    return (\r\n        <div className = {style.header}>\r\n            <div className = {style.logo}>\r\n                <img src = {logo} alt = 'logo' />\r\n            </div>\r\n            <div className = {style.loginBlock}>\r\n                {!props.auth.isAuth ? <button><NavLink to='/login'>Login</NavLink></button> : props.auth.userData.login}{props.auth.isAuth && <button onClick = {logout}>Logout</button> } \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { authThunkCreator, logoutThunkCreator } from '../../redux/reducers/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {    \r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {        \r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nexport const HeaderWrapper = connect(mapStateToProps, {authThunkCreator, logoutThunkCreator})(HeaderContainer);\r\n\r\nexport default HeaderContainer;","import React from 'react';\r\nimport style from './LoginForm.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { requiredField } from '../validator';\r\nimport FormControl, { FormControl2 } from './FormControl';\r\n\r\nconst LoginForm = (props) => {\r\n    \r\n    return (\r\n        <form className = {style.main} onSubmit = {props.handleSubmit}>\r\n            <div><Field component = {FormControl} type = {\"text\"} name = {\"login\"} placeholder = {\"Your login\"} validate = {requiredField} /></div>\r\n            <div><Field component = {FormControl2} type = {\"password\"} name = {\"password\"} placeholder = {\"Your password\"} validate = {requiredField} /></div>\r\n            <div><Field component = {\"input\"} type = {\"checkbox\"} name = {\"rememberMe\"} /></div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginFormContainer = reduxForm({form: 'login'})(LoginForm);\r\n\r\nexport default LoginFormContainer;","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport logo from '../../assets/img/Lineage_OS_Logo.png';\r\nimport LoginFormContainer from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport { logoutThunkCreator, loginThunkCreator } from '../../redux/reducers/auth-reducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        debugger;\r\n        props.loginThunkCreator(formData.login, formData.password, formData.rememberMe);        \r\n    }\r\n    setTimeout( () => {\r\n        \r\n    }, 1000);\r\n    if (props.isAuth) {\r\n        return <Redirect to = {\"/profile\"} />\r\n    }\r\n    \r\n    return (\r\n        <div className = {style.main}>\r\n            <h1>LOGIN</h1>\r\n            <LoginFormContainer onSubmit = {onSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {loginThunkCreator, logoutThunkCreator})(Login);\r\n\r\nexport default LoginContainer;","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport ProfilePage from './components/ProfilePage/ProfilePage';\nimport { Route, withRouter } from 'react-router-dom';\nimport DialogsPage from './components/DialogsPage/DialogsPage';\nimport UsersPageContainer from './components/UsersPage/UsersPageContainer';\nimport { HeaderWrapper } from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { authThunkCreator, initTK } from './redux/reducers/auth-reducer';\nimport { compose } from 'redux';\nimport { getAllUsersInfoTK } from './redux/reducers/profile-reducer';\n\nclass App extends React.Component {\n\tcomponentDidMount() {\t\t\n\t\tthis.props.initTK();\n\t\tlet userId = this.props.match.params.userId;\n        if (!userId) {            \n            userId = this.props.userData.id;\n        }\n\t\tthis.props.getAllUsersInfoTK(userId);\n\t}\n\trender() {\t\t\n\t\tif (!this.props.auth.init) {\t\t\t\n\t\t\treturn \"loading\";\n\t\t}\n\t\treturn(\n\t\t\t<div className = 'app'>\n\t\t\t<HeaderWrapper />\n\t\t\t<Sidebar />\n\t\t\t<Route path = '/dialogs' component = {DialogsPage} />\n\t\t\t<Route path = '/profile/:userId?' component = {ProfilePage} />\t\t\t\n\t\t\t<Route path = '/users' component = {UsersPageContainer} />\n\t\t\t<Route path = '/login' component = {LoginContainer} />\t\t\n\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.auth,\n\t\tuserData: state.auth.userData,\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps, {authThunkCreator, initTK, getAllUsersInfoTK}),\n\twithRouter\n)(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import thunkMiddleware from 'redux-thunk';\r\nimport authReducer from './reducers/auth-reducer';\r\nimport {reducer as formReducer} from 'redux-form';\r\nconst { combineReducers, createStore, applyMiddleware } = require(\"redux\");\r\nconst { default: profileReducer } = require(\"./reducers/profile-reducer\");\r\nconst { default: dialogsReducer } = require(\"./reducers/dialogs-reducer\");\r\nconst { default: usersReducer } = require(\"./reducers/users-reducer\");\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n    \t<HashRouter>\n\t\t\t<Provider store = {store}>\t\t\t\n        \t\t<App />\n\t\t\t</Provider>\n    \t</HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__2dt4W\",\"main\":\"FormControl_main__3tHQL\"};","module.exports = __webpack_public_path__ + \"static/media/my-avatar.ce8e7ab8.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"ProfilePost_post__3CxoS\",\"postsText\":\"ProfilePost_postsText__2cw-X\",\"likes\":\"ProfilePost_likes__2NEbq\",\"postBlock\":\"ProfilePost_postBlock__E5e6v\",\"author\":\"ProfilePost_author__2AegU\"};","const UPDATE_MESSAGE = 'UPDATE_MESSAGE';\r\nconst ADD_MESSAGE = 'ADD_MESSAGE';\r\nconst SEND_NEW_MESSAGE = 'SEND_NEW_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, messagesText: 'NEW message text!@'},\r\n        {id: 2, messagesText: 'NO new message text!'},\r\n        {id: 3, messagesText: 'old message text///'},\r\n        {id: 4, messagesText: 'Many many many many text!@'},\r\n    ],\r\n    newMessagesText: ''\r\n}\r\nlet messageId = 5;\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                newMessagesText: action.newMessagesText\r\n            }        \r\n        case SEND_NEW_MESSAGE:\r\n            let newMessage = {\r\n                id: messageId,\r\n                messagesText: action.newMessagesText\r\n            }\r\n            messageId++;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage]                \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const updateMessage = (newMessagesText) => ({type: UPDATE_MESSAGE, newMessagesText}); \r\nexport const addMessage = () => ({type: ADD_MESSAGE});\r\nexport const sendNewMessage = (newMessagesText) => ({type: SEND_NEW_MESSAGE, newMessagesText});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfileMain_main__2Y5Pd\",\"avatar\":\"ProfileMain_avatar__pkfTI\",\"statusBlock\":\"ProfileMain_statusBlock__2E377\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersUser_users__V8m3V\",\"usersBlock\":\"UsersUser_usersBlock__1GY1i\",\"avatar\":\"UsersUser_avatar__Fzvc8\",\"infoBlock\":\"UsersUser_infoBlock__3DHxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsPage_dialog__2kKpP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__29XLt\",\"logo\":\"Header_logo__22rzP\",\"loginBlock\":\"Header_loginBlock__2y2V8\"};","module.exports = __webpack_public_path__ + \"static/media/Lineage_OS_Logo.8be16200.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__B1RT-\",\"active\":\"Sidebar_active__2y87h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ProfileNewPostForm_main__3JN3c\",\"btn\":\"ProfileNewPostForm_btn__1jAM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DialogsMessage_main__1qPeE\",\"messageBlock\":\"DialogsMessage_messageBlock__2Im_d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"DialogsNewMessageForm_main__2lYD_\",\"btn\":\"DialogsNewMessageForm_btn__3ul8O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"UsersPage_users___G6Xy\",\"usersBlock\":\"UsersPage_usersBlock__3al2F\",\"avatar\":\"UsersPage_avatar__2iwZL\",\"selectedPage\":\"UsersPage_selectedPage__2KQwf\"};"],"sourceRoot":""}